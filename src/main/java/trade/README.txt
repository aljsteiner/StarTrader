“Version 19.27

“Save the Planets”; “Trade, trade, trade”;  “Cooperating together with trades”: is an economics strategy game emphasizing cooperation over competition.  The settings permit changing the game in many different ways.  Clan-masters manage clans of planets and ships which run as robots.  The players change clan settings to try to improve their clan score.  The planets and ships are two sets of economies with a lot of similar rules and some significantly different values. Each economy has 2 very stressed financial sectors,2 very successful financial sectors, 3 other ok financial sectors.   At the end of each year planets increase resources by mining, new staff are added at the lowest grade while many staff move up one or more grades, and knowledge increases making operations more efficient. Ships hold and carry resources and staff between planets, trading resources a planet needs for surplus resources or staff from the planets.  Ships are initially set to not grow new staff and ships generally do not mine or find new resources. 

There are instructions at the end of this document to describe how to get the files you need to run this game and even how you can use a program called “netbeans” to change the program.

The game-master changes overall game settings, setting  rules for all ships and planets, thus the game-master can set up many different games of economics strategy.   The game-master sets the difficulty of the game, and the amount of random increases or decreases to the priorities,  costs, growth, etc. There are five clans each with a clan-master.  One or more players can divide up the roles of game-master and clan-masters.  Clans without a clan-master run with the preset settings for that clan.  The clan-masters can alter any of the settings and leave unchanged the rest of the clan settings for the robots which calculate the moves for each clan planet and ship.  

Planets and ships which did not have enough of any financial resource to survive the year die, all resources and staff are lost, and the economy disappears.  Otherwise when enough resources and staff are available, growth is applied to resources, staff and knowledge.  After each run a large set of statistics is available to be viewed about the planets and ships,  Runs can be 1 year, 5 years, 10 or 20 years.  It is expected that between 7% to 20% of the economies fail each year.  Statistics after each run help show the problems the ship and planets faced and may give some ideas about changing clan priorities to increase planet and ship survival. If too many or not enough economies fail each year, the game master can change a game setting to alter results. After viewing their statistics each clan-master changes a few settings then the game-master starts another run.  

The game-master changes settings to change how all planets and ships survive and grow.  Also the game-master can adjust how the winning score is calculated and when the score is good enough to win the game.  “Save the planets”  increases the score of a clan based on the number of planets and ships that the clan's barters have helped, and how much the barters helped.  The game-master can change settings so that  “Highest worth wins”, or “most planets wins” or many other games.  You can play the game for as many runs as you choose. 

There is a “keep” button with the settings, when that button is clicked, any changes made to that page of settings is kept for later games.  If the keep button is not pressed, the changed setting on that page will be forgotten for the next game.  You should also fill in the comment so that you can remember why you made the change.  You can also use the remember button on the statistics pages to remember a line whose title you klick.  These values are written to a file named “keep” in the same directory as the jar file for the game.

At the start of the year each economy projects what its resources will be at the end of the year,  Each resource and staff sector is given a strategic value  related to how much more is needed for a good year.  In addition, if a planet or ship will not survive the year with the current resources and staff an SOS value is set.  Each year every ship tries to find a planet for a good trade in a way that both of them will be more able to survive and have good growth.  The game-master can adjust how much the ship knows about planets. Ships may know nothing and just make a random choice.  Ships may be able to use a history that is updated every time they trade with a planet,  Ships may be able to get direct knowledge about what planets have to make the best trade, combined with the cost of travel to that planet.

Clan-masters choose a friendship level with each of the other clans.  The higher the friendship, the more a ship and planet will trade.  Ships can trade with each other, if more than one ship is trading at a given planet.  

When a planet or ship has enough to survive the year,  the additional resources determine the health of the planet or ship.  Planets and ships with poor health are less efficient in doing the required work for that year.  This means that the work takes more resources and staff.  The work becomes more efficient for each sector each year as the knowledge for that sector increases.  

When there are more resources and/or staff than needed for maintenance and travel, those resources and work can be applied to growth in that sector.  Each of the required  or interface Maintenance and required or interface Growth require a combination of resources and staff, just as growth requires a combination of resources and staff.  Every year each financial sector will only be able to do the amount of work enabled by the required combination of resources and staff, there will be some resources or staff for each sector which cannot be used.

The resources and staff subAssets for each sector are working resources and staff.   Cargo and guest subAssets are the reserved resources and staff, they do no work and their yearly costs are reduced, they are available to convert to working assets or to be traded.

Each year during the Cash Flow activity, the potential costs for each financial sector are calculated.  Any sectors with insufficient prospective resources or work to meet the required costs, must move any available reserves to working status.  If that is not enough assets from other sectors may be repurposed.  Of course the cost of such repurposing is quite high, taking well over 10 times the resulting increase in assets for the needy sector.

The game-master sets a number of priorities and values over the game for all the clans.  The game-master adjusts the difficulty of the game and other options that significantly change the nature of challenges in the game.  A normal goal is to have no more than 10% of ships and 10% of planets die in a single year of the game.  Catastrophes can occur at the year start before it is time to trade.  A catastrophe can destroy a large fraction of the resources for one or two financial sectors, and the staff for a financial sector, but they also discover additional resources for one or more sectors.  These additional resources replace the decay of resources as they are mined

The game-master chooses which results are most important for deciding the winner in the game.  The winner may be the clan that gave the most help to clans, or that helped the most planets or the most planets and ships, or had the highest worth, or had the most planets, etc.  The winner will often change after each run of one or more years.  

After players have set clan priorities and other levels, the game-master can run the game for 1,5,10, or 20 years.  When the years are finished, results are available, there are 20 different pages showing different results and showing some of the same results in different ways.  Pages 0,1,2 list the most important results.  Any page with the score at the top will be set to the background color of the clan with the highest score, the winner when the score gets good enough to win.

Each planet and ship have seven financial sectors.  Each sector has resources, cargo(resource not working but in reserve), staff, guests(staff not working but in reserve), and knowledge of 3 kinds (common knowledge, new knowledge, and manuals(researchers work to get new knowledge or common knowledge from manual, but trades can only trade manuals).

The game is available in a folder at: https://drive.google.com/drive/folders/1P-hw8Wk9BcwEdHSS8CdAbDDjtjyEQTF_?usp=sharing
This is a folder because virus protect will not allow passing a java compiled file.
The folder contains a pdf of this README and the file startrader.jar.  
This file will only run if you have java installed.  It may already be on your windows machine.  If you don’t know whether you have installed Java, run the following link to load  the current version  at https://www.oracle.com/java/technologies/javase-jre8-downloads.html#license-lightbox
With the jre (java runtime environment) installed, you should be able to run the game by clicking on the file startrader.jar.  After reading the story tab, go to the Settings tab to make any changes.  There are six colored radio buttons, the first is labed “master” for game-master, the clans are labeled red, orange, yellow, green, and blue.  There are pages of 10 sliders for the game-master or a different set pages of 10 sliders for each of the clan-masters.  The sliders are preset to the existing value, changing a slider causes the named value to be changed.

Hovering over a name, or clicking the name causes an explanation of that sliders action at the bottom of the page.  Many of the names have two sliders, one for planets and one for ships.  For example growths would have a moderate or large growth for planets and a small or zero value of growth for ships.  But the game-master could move the ships slider to have some growth from ships.

The source the game is at http://github.com/aljsteiner/StarTrader 
I use apache Netbeans, the latest version, and the latest open source version of java as well as the latest owned java.8 version of java.  The java being distributed to Windows 10 machines by Oracle is the latest version of java.1.8... jre.  You can download a corresponding JDK from Oracle after signing their license.  StarTrader often does not work with some of the later open source versions of Java.

Here are many of the settings you will need  in Apache NetBeans currently version 12.3.  You must be logged in as an administrator to have the windows permissions to do the installations.
1.Open NetBeans IDE and create a new ant project with existing source at C:\Users\Public\netbeans\Trader19.2p
2.Create a source folder such as C:\Users\Public\netbeans\Trader19.2s
3.Right click the project name, at versioning create a git repository in Trader19.2p
4.Right click the project name, at git select pull and fill out the form as requested
5.Right click the project name, select properties, select formatting, select project specific options, choose all languages, choose Tabs And Indents, Enable Indentation, Expand Tabs to Spaces, Number of Spaces per indent=2, tab Size = 2, Right Margin=80,Line Wrap After words
6.Download the latest Java 8 JDK after signing the license, install it into the Java folder under C:\Program Files
7.Left Click the NetBeans Tools menu and select Java Platforms, click "Add Platform..." browse to C:\Program Files\Java and choose the latest installed jdk1.8.0_271 
8.Right click the project name, select properties, and under “Source Packages” select the package “trade” to get a list of the created Java Classes.  The StarTrader.java is the main class with the user interface logic.  Classes E.java and EM.java contain lots of data tables need for the user interface, E.java contains most of the fixed data, EM.java contains data that can change from the user changes or the statistics of the current run of the game.
